Description
===========
This is project Image Caption developed by team Go Duck composed of 
Chenwei Dai, Dongyang Zhang, Wenmiao Yu, Benxiang Yan



Requirements
============
        1.pip3 install -r requirements.txt

        2.pip3 install --user pycocotools

        3.Follow the steps to install cocoapi:
          git clone https://github.com/cocodataset/cocoapi.git
          cd cocoapi/PythonAPI
          make
        
        4.git clone https://github.com/salaniz/pycocoevalcap



Code organization
=================
Demo/       --  Run a demo of our code (for comparing small vocabulary model and large vocabulary model mainly)

1. Download all files in the ece285_final_project/Demo folder.

2. The models have to be downloaded seperatly because Github does not support large files.
   Here are the instructions.
   - creat a folder named 'models' in the ece285_final_project/Demo folder together with all other files.
   - download 4 models through this link: https://www.dropbox.com/sh/wy2icnybo3numf1/AACj-TYjglkfCT_3_l3u9cWFa?dl=0
   - store these 4 models in the ece285_final_project/Demo/models folder that you just created.

3. Now, you should be able to run the Demo.ipynb using either GPU or CPU.

4. To test our models, simply run through Part 4 of the juputer notebook, type in the path of your testing image and run the cell.
You should be able to see two captions generated by either the small vocab model or the large vocab model.

------------------------------------------------
Data/
1.Download cocodataset and make sure the images are in './data/images', and annotations are in './data/annotations'

2.Follow the following steps if you need split the data (you may need change the directories or proportions)
cd ./data
python3 split_data.py
python3 filter_annotations.py

------------------------------------------------
Train/
small_vocab_training.ipynb                               -- Train for small vocabulary model
                                                         -- Make sure you set the right directories in 'data_loader.py'
                                                         -- The other training for big vocabulary is different in data set and epoch
                                                         -- Refer our report for details
model.py                                                 -- Model
data_loader.py                                           -- Data Loader
vocabulary.py                                            -- Vocabulary class

Evaluation/
evaluation_generate_result.ipynb                         -- Generate the result json files
                                                         -- Make sure you copy everything in 'Train/' here except the training notebook, including the vocabulary.pkl generated after training
small_evaluation_val.ipynb, large_evaluation_test.ipynb  -- Generate the evaluation scores, make sure you put them in './pycocoevalcap/'
plot.ipynb                                               -- Plot the loss graphs
